(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{498:function(e,n,t){"use strict";t.r(n);var s=t(35),a=Object(s.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"config-files"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#config-files"}},[e._v("#")]),e._v(" Config files")]),e._v(" "),t("h2",{attrs:{id:"babel-config"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#babel-config"}},[e._v("#")]),e._v(" Babel Config")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('// .babelrc\n\n{\n  "presets": [["@babel/preset-env",  {\n    "targets": {\n      "esmodules": true //target browser that support esbuilds\n    },\n    "modules": false //dont compile the module files to es5 , required for tree shaking\n  }]],\n  "plugins": ["@babel/plugin-transform-runtime"]\n}\n\n')])])]),t("h2",{attrs:{id:"postcss-config"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#postcss-config"}},[e._v("#")]),e._v(" Postcss config")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// .postcss.config.js\n\nmodule.exports = {\n  plugins: [\n    require('autoprefixer')\n  ]\n}\n\n")])])]),t("h2",{attrs:{id:"shopify-themekit-config"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shopify-themekit-config"}},[e._v("#")]),e._v(" shopify themekit config")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('//config.yml\n\ndevelopment:\n  password: \n  theme_id: "theme_id"\n  store: your-url.myshopify.com\n  directory: dist/\n  ignore_files:\n    - config/**.json\n\n')])])]),t("h2",{attrs:{id:"webpack-config"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-config"}},[e._v("#")]),e._v(" webpack config")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("//webpack.config.js\n\nconst glob = require('glob');\nconst path = require('path'); //get absolute paths\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin'); //extract css from js imports\nconst CopyPlugin = require(\"copy-webpack-plugin\"); //copy assets p.s, webpack also watch for all the copied files\nconst WebpackShellPluginNext = require('webpack-shell-plugin-next'); //execute shell commands\nconst mode = process.env.NODE_ENV === 'development' ? 'development' : 'production';\nconst stats = mode === 'development' ? 'errors-only' : { children: false }; //hide or show warning\nconst liveReloadPlugin = require('./liveReload'); //custom webpack plugin for hotreloading based on theme watch status\nconst { VueLoaderPlugin } = require('vue-loader')\n\nconst templateEntryPoints = glob.sync('./src/js/bundles/templates/**/**.js').reduce((acc, path) => {\n  const entry = path.replace(/^.*[\\\\\\/]/, '').replace('.js', '');\n  acc[entry] = path;\n  return acc;\n}, {});\n\nconst layoutEntryPoints = glob.sync('./src/js/bundles/layout/**.js').reduce((acc, path) => {\n  const entry = path.replace(/^.*[\\\\\\/]/, '').replace('.js', '');\n  acc[entry] = path;\n  return acc;\n}, {});\n\nmodule.exports = {\n  mode,\n  stats,\n  entry: {\n    ...templateEntryPoints,\n    ...layoutEntryPoints\n  }, //webpack supports multiple entry as an object  {chunkname: entrypath}\n  resolve: {\n    alias: {\n      Styles: path.resolve(__dirname, 'src/styles/'),\n      vue: 'vue/dist/vue.cjs.js'\n    }\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.vue$/,\n        loader: 'vue-loader'\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'babel-loader'\n      },\n      {\n        test: /\\.(sc|sa|c)ss$/,\n        use: [\n          MiniCssExtractPlugin.loader,\n          {\n            loader: 'css-loader',\n            options: {\n              url: false\n            }\n          },\n          'postcss-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              sourceMap: true\n            }\n          }\n        ]\n      },\n    ]\n  },\n  output: {\n    clean: true,\n    filename: './assets/bundle.[name].js',\n    path: path.resolve(__dirname, 'dist'),\n    chunkFilename: './assets/bundle.[name].js?[chunkhash]' //added chunkhash for dynamically created chunk, else browser wont know if file has been changed and will show cached version.\n  },\n\n  plugins: [\n    new VueLoaderPlugin(),\n    new MiniCssExtractPlugin({\n      filename: './assets/bundle.[name].css'\n    }),\n    new CopyPlugin({\n      patterns: [ //breaking change in webpack5 compability\n        {\n          from: 'src/liquid/templates/customers/*.liquid',\n          to: 'templates/customers/[name][ext]'\n        },\n        {\n          from: 'src/liquid/snippets/**/*.liquid',\n          to: 'snippets/[name][ext]'\n        },\n        {\n          from: 'src/liquid/sections/**/*.liquid',\n          to: 'sections/[name][ext]'\n        },\n        {\n          from: 'src/liquid/templates/**/*.liquid',\n          to: 'templates/[name][ext]'\n        },\n        {\n          from: 'src/liquid/layout/**/*.liquid',\n          to: 'layout/[name][ext]'\n        },\n        {\n          from:'src/assets/**/*',\n          to:'assets/[name][ext]',\n        }\n      ],\n    }),\n  ],\n\n};\n\n//treeshake and watch on development\nif (mode === 'development') {\n  module.exports.devtool = false;\n  module.exports.plugins.push(\n    new WebpackShellPluginNext({\n      onBuildStart: {\n        scripts: ['echo Webpack build in progress...ðŸ› ']\n      },\n      onBuildEnd: {\n        scripts: ['echo Build Complete ðŸ“¦','echo Started Watching for a theme changes, starting initial deployment','shopify-themekit deploy && shopify-themekit watch --notify=/tmp/theme.updatetheme'],\n        parallel: true //this is required to make webpack watch run in background.\n      }\n    }),\n    new liveReloadPlugin() //Custom webpack plugin for live reloading when theme watch uploads the file to shopify\n  );\n}\n\n//minification,create chunks,treeshake on production\nif(mode === 'production') {\n  module.exports.optimization = {\n    usedExports: true, //check for ununsed exports for treeshaking within file\n    splitChunks: {\n      usedExports: true, //check for ununsed exports for treeshaking within chunk\n      cacheGroups: {\n        default: false, //override default\n        Vendors: {  //create a seperate chunk for vendor\n          test: /[\\\\/]node_modules[\\\\/]/, //required both / & \\ to support cross platform between unix and windows\n          name: 'vendors',//only create chunk for dependencies\n          chunks :'all', //create chunk for all sync , async and cjs modules\n          type: /javascript/,\n          enforce: true // ignores minSize: 2000, minChunks: 1,priority: 0,\n        },\n        common: { //create a common chunk\n          chunks: \"all\", //create chunk for all sync , async and cjs modules\n          minChunks: 2, //minimum import for creating chunk\n          name: 'common',\n          priority: -20, //-ve value denotes that it will be in lowest priority\n          minSize: 1000,//minimum size that required for creating a chunk, we would not want just few lines of code getting chunked together, so minimum size set to 1kb\n          type: /javascript/\n        }\n      },\n    }\n  }\n}\n\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);