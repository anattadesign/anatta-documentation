(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{360:function(t,e,s){t.exports=s.p+"assets/img/page-url.bad5f99f.png"},361:function(t,e,s){t.exports=s.p+"assets/img/page-url-meta.85b6b01a.png"},362:function(t,e,s){t.exports=s.p+"assets/img/priority-check.fdec1dfa.png"},434:function(t,e,s){t.exports=s.p+"assets/img/priority.59e4c5ba.png"},435:function(t,e,s){t.exports=s.p+"assets/img/Api-key.0277860e.png"},436:function(t,e,s){t.exports=s.p+"assets/img/render-page.42304458.png"},437:function(t,e,s){t.exports=s.p+"assets/img/document-section-heading.fd7bd487.png"},466:function(t,e,s){"use strict";s.r(e);var a=s(35),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"code-integration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#code-integration"}},[t._v("#")]),t._v(" Code Integration")]),t._v(" "),a("p",[t._v("Once we verified that pages are being created from prismic along with all of the data saved in its metafields.\nWe need to implement code to fetch those metafields data and render it.")]),t._v(" "),a("p",[a("strong",[t._v("How it works ?")])]),t._v(" "),a("ul",[a("li",[t._v("Once we publish page on prismic, Prismic adaptor will create the new page on shopify if it doesn't exist. In this page's metafields all of our slices are stored as a namespace and all of the data within that slice is saved as its key.")]),t._v(" "),a("li",[t._v("If page already exist on shopify, it will only update the metafields.")]),t._v(" "),a("li",[t._v("Prismic adaptor will add few metafields. One important field is  'meta_field_priority' , which keep track of all the slices used in that particular page in order.")])]),t._v(" "),a("p",[a("strong",[t._v("Code logic")])]),t._v(" "),a("ul",[a("li",[t._v("loop through all the metafields created in a page.")]),t._v(" "),a("li",[t._v("Search for"),a("br"),t._v(" "),a("code",[t._v("namespace: 'meta_field_priority'")]),a("br"),t._v(" "),a("code",[t._v("key: 'priority'")])]),t._v(" "),a("li",[t._v("loop through its value , as it contains the slices names in the same order as we have implemented in prismic side.")]),t._v(" "),a("li",[t._v("create the snippet with the slice_name,but using "),a("strong",[t._v("slice-name")]),t._v(" instead of "),a("strong",[t._v("slice_name")])]),t._v(" "),a("li",[t._v("loop through each slice_name , which is also the metafield namespace.")]),t._v(" "),a("li",[t._v("pass the namespace a.k.a slice_name and render the snippet that matches the "),a("strong",[t._v("slice-name")])]),t._v(" "),a("li",[t._v("check for keys in specific namespace on page metafields or")]),t._v(" "),a("li",[t._v("go to prismic custom type and get the "),a("strong",[t._v("API_ID")]),t._v(" of each placeholder of the specific slice.")]),t._v(" "),a("li",[t._v("Once you get the key, Fetch the "),a("strong",[t._v("namespace")]),t._v(" that were sent earlier while rendering in a variable name 'Module';")]),t._v(" "),a("li",[t._v("now you can following snippet to render the value,")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("metafields[module].key\n")])])]),a("h2",{attrs:{id:"create-a-template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-a-template"}},[t._v("#")]),t._v(" Create a template")]),t._v(" "),a("p",[t._v("Create a new page template  and paste the code.")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("You only need to create one common page template for all of the prismic pages.")])]),t._v(" "),a("div",{staticClass:"language-liquid extra-class"},[a("pre",{pre:!0,attrs:{class:"language-liquid"}},[a("code",[t._v("templates/page.prismic-page.liquid \n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- fetch metafields of page using page-handle --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assign")]),t._v(" metafields "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("page_handle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("metafields "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- loop through priority meta_field_priority --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" priorities "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" metafields"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'meta_field_priority'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--  loop though priorioty --\x3e")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" p "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" priorities "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assign")]),t._v(" snippet_names "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("-%}")])]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- loop through namespace or slice key--\x3e")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" module "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" p "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n\t\t   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- replace slice_name to slice-name --\x3e")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assign")]),t._v(" snippet_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" module "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assign")]),t._v(" enable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" metafields"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("enable "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("-%}")])]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assign")]),t._v(" min "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1200")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("-%}")])]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assign")]),t._v(" max "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2300")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("-%}")])]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assign")]),t._v(" diff "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" max "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("minus")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" min "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("-%}")])]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assign")]),t._v(" random_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"now"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token object"}},[t._v("date")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%N"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("modulo")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" diff "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("plus")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" min "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("-%}")])]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" module "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'priority'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("-%}")])]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("capture")]),t._v(" slice_data "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("-%}")])]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- "),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" snippet_name "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v(" --\x3e")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- create new snippet with slice-name and render here--\x3e")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" enable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n\t\t\t\t\t  "),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v(" snippet_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" random_id "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endif")]),t._v(" %"),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endcapture")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("-%}")])]),t._v("\n\t\t\t\t\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--if same slice is imported twice, our metafields value will be set as slice-name-1 --\x3e")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" slice_data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("contains")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Liquid error:'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("-%}")])]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assign")]),t._v(" allSlices "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" snippet_names "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("-%}")])]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--split the slice-name and check if it matches with any snippet-name,once matched it will render the snippet --\x3e")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" slice_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" allSlices "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" snippet_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("contains")]),t._v(" slice_name "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("-%}")])]),t._v("\n\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- "),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" snippet_name "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v(" --\x3e")]),t._v("\n\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" enable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n\t\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v(" snippet_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" random_id "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n\t\t\t\t\t\t\t  "),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endif")]),t._v(" %"),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endif")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("-%}")])]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endfor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("-%}")])]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("-%}")])]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assign")]),t._v(" snippet_names "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" snippet_names "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" snippet_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function filter"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("-%}")])]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" slice_data "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endif")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("-%}")])]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endif")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("-%}")])]),t._v("\n\n\t\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endfor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endfor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token liquid language-liquid"}},[a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endfor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])])])])]),a("div",{staticClass:"block-space"}),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"create-snippets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-snippets"}},[t._v("#")]),t._v(" Create snippets")]),t._v(" "),a("p",[a("strong",[t._v("Go to page url")])]),t._v(" "),a("img",{attrs:{src:s(360)}}),t._v(" "),a("div",{staticClass:"block-space"}),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[a("strong",[t._v('Add "/metafields.json" at the end of url')])])]),t._v(" "),a("img",{attrs:{src:s(361)}}),t._v(" "),a("div",{staticClass:"block-space"}),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Search for 'meta_field_priority'")])])]),t._v(" "),a("img",{attrs:{src:s(362)}}),t._v(" "),a("div",{staticClass:"block-space"}),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Check value of 'meta_field_priority'")])])]),t._v(" "),a("img",{attrs:{src:s(434)}}),t._v(" "),a("div",{staticClass:"block-space"}),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Create a snippet using 'meta_field_priority'")])]),t._v(" "),a("p",[t._v("Check the value key of 'meta_field_priority'"),a("br"),t._v(" "),a("code",[t._v('"test_slice')])]),t._v(" "),a("p",[t._v("Make a new snippet with the title of each seperated value.")])])]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("DANGER")]),t._v(" "),a("p",[t._v("Make sure you name the snippet as "),a("strong",[t._v("test-slice")]),t._v(" not  "),a("strong",[t._v("test_slice")]),t._v(" !!")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("snippets/test-slice.liquid\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[a("strong",[t._v("test_slice")]),t._v(" is also the metafields namespace.")])]),t._v(" "),a("div",{staticClass:"block-space"}),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"get-metafields-namespace-and-key-for-the-created-snippets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-metafields-namespace-and-key-for-the-created-snippets"}},[t._v("#")]),t._v(" Get metafields namespace and key for the created snippets")]),t._v(" "),a("p",[t._v("The created snippets have access to the 'namespace' called "),a("strong",[t._v("module")]),t._v(".")]),t._v(" "),a("p",[t._v("Fetch all the metafields belonging to that namespace using,")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("snippets/test-slice.liquid\n\n\x3c!-- fetch metafields based on namespace aka slice_test --\x3e\n{% assign section = metafields[module] %} \n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("Instead of calling the actual namespace 'slice_test' , we can use "),a("strong",[t._v("module")]),t._v(" variable which have the namespace based on which this snippet is called.\nRefer to "),a("a",{attrs:{href:"#create-a-template"}},[t._v("Create a template")])])]),t._v(" "),a("p",[t._v("Fetch the metafield key by going to the prismic dashboard / custom types / slice ,\nCopy the placeholder id.")]),t._v(" "),a("p",[a("strong",[t._v("Placeholder id")]),t._v(" acts as an metafields key,")]),t._v(" "),a("img",{attrs:{src:s(435)}}),t._v(" "),a("h2",{attrs:{id:"fetch-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fetch-data"}},[t._v("#")]),t._v(" Fetch Data")]),t._v(" "),a("p",[t._v("Use the namespace(slice_test) and key(section_title) acquired from above, to fetch the value of that placeholder.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("snippets/test-slice.liquid\n\n\x3c!-- fetch value based on key(section_title) --\x3e\n{% assign section_title = section['section_title'] %} \n")])])]),a("h2",{attrs:{id:"full-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#full-code"}},[t._v("#")]),t._v(" Full Code")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("snippets/test-slice.liquid\n\n\x3c!-- fetch metafields based on namespace(slice_test) --\x3e\n{% assign section = metafields[module] %} \n\n\x3c!-- fetch value based on key(section_title) --\x3e\n{% assign section_title = section['section_title'] %} \n\n\x3c!-- Render data --\x3e\n<h1 class=\"section__title\">{{section_title}}</h1>\n")])])]),a("h2",{attrs:{id:"verify-changes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#verify-changes"}},[t._v("#")]),t._v(" Verify changes")]),t._v(" "),a("p",[t._v("Now assign your prismic "),a("strong",[t._v("page template")]),t._v(" to "),a("strong",[t._v("prismic-page")]),a("br"),t._v("\nView your page in the prismic-page template")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("/pages/{page handle}?view=prismic-page\n")])])]),a("img",{attrs:{src:s(436)}}),t._v(" "),a("img",{attrs:{src:s(437)}})])}),[],!1,null,null,null);e.default=n.exports}}]);